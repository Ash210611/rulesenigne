//
// This Lexer grammar will be imported by the SNOWFLAKE Parser grammar.
//==============================================================================

lexer grammar SNOWFLAKE_Lexer;

//==============================================================================
// Symbols

AT_SIGN			: [@]  ;
LTGT                    : '<>' ;
PARAMETER_ASSIGNMENT    : '=>' ;
ARROW			: '->' ;
DOUBLE_ASTERISK		: '**' ;	// Exponent operator
ASTERISK                : '*'  ;
DOUBLE_COLON		: [:] [:] ;
COLON                   : [:]  ;
DOUBLE_EQUALS           : [=] [=] ;
EQUALS                  : [=]  ;
EXCLAMATION_MARK	: [!]  ;
GE                      : '>=' ;
NOT_EQUALS              : '!=' ;
TILDE_EQUALS            : '~=' ;
CARET_EQUALS            : '^=' ;
PLUS_SIGN               : '+'  ;
MINUS_SIGN              : '-'  ;
QUESTION_MARK           : '?'  ;
DOLLAR_SIGN             : [$]  ;
DOUBLE_DOLLAR_SIGN	: [$] [$] ;
SEMI_COLON              : [;]  ;
LE                      : '<=' ;
GT                      : '>'  ;
LT                      : '<'  ;
DOUBLE_PIPE             : '||' ;
PIPE                    : '|'  ;
DOT                     : [.]  ;
L_PAREN              	: [(]  ;
R_PAREN             	: [)]  ;
COMMA                   : ','  ;
SINGLE_QUOTE            : '\'' ;
SLASH                   : [/]  ;
BACKSLASH		: '\\' ;
UNDERSCORE              : '_'  ;
POUND                   : '#'  ;
L_BRACKET            	: '['  ;
R_BRACKET           	: ']'  ;
L_CURLY              	: '{'  ;
R_CURLY             	: '}'  ;
CARET_SIGN              : '^'  ;
PERCENT_SIGN		: '%'  ; 	// Modulo operator
AMPERSAND		: '&'  ;

fragment LETTER         : [a-zA-Z] ;
fragment DIGIT  	: [0-9] ;
fragment EXPONENT       : LETTER_E [+-]? DIGIT+ ;

//==============================================================================
ACCOUNT			: A C C O U N T ;
ACTION			: A C T I O N ;
ADD			: A D D ;
AFTER			: A F T E R ;
ALL			: A L L ;
ALTER			: A L T E R ;
ALWAYS			: A L W A Y S ;
ANALYZE			: A N A L Y Z E ;
AND			: A N D ;
ANTI			: A N T I ;
APPLY			: A P P L Y ;
ARCHIVE			: A R C H I V E ;
ARRAY			: A R R A Y ;
AS			: A S ;
ASC			: A S C ;
AVRO			: A V R O ;
BETWEEN			: B E T W E E N ;
BIGINT			: B I G I N T ;
BINARY			: B I N A R Y ;
BINARYFILE		: B I N A R Y F I L E ;
BLOOMFILTER		: B L O O M F I L T E R ;
BOOLEAN			: B O O L E A N ;
BOTH			: B O T H ;
BUCKET			: B U C K E T ;
BUCKETS			: B U C K E T S ;
BY			: B Y ;
CACHE			: C A C H E ;
CASCADE			: C A S C A D E ;
CASE			: C A S E ;
CAST			: C A S T ;
CATALOG			: C A T A L O G ;
CHANGE			: C H A N G E ;
CHANGES			: C H A N G E S ;
CHAR			: C H A R ;
CHARACTER		: C H A R A C T E R ;
CHECK			: C H E C K ;
CLOUD_FILES		: C L O U D [_] F I L E S ;
CLUSTER			: C L U S T E R ;
CLUSTERED		: C L U S T E R E D ;
COLLECTION		: C O L L E C T I O N ;
COLUMN			: C O L U M N ;
COLUMNS			: C O L U M N S ;
COMMENT			: C O M M E N T ;
COMPUTE			: C O M P U T E ;
CONNECTION		: C O N N E C T I O N ;
CONSTRAINT		: C O N S T R A I N T ;
CONTAINS		: C O N T A I N S ;
CONVERT			: C O N V E R T ;
CREATE			: C R E A T E ;
CREDENTIAL		: C R E D E N T I A L ;
CROSS			: C R O S S ;
CSV			: C S V ;
CUBE			: C U B E ;
CUME_DIST		: C U M E [_] D I S T ;
CURRENT			: C U R R E N T ;
DATA			: D A T A ;
DATABASE		: D A T A B A S E ;
DATE			: D A T E ;
DAY			: D A Y ;
DAYS			: D A Y S ;
DBPROPERTIES		: D B P R O P E R T I E S ;
DEC			: D E C ;
DECIMAL			: D E C I M A L ;
DEFAULT			: D E F A U L T ;
DEFERRABLE		: D E F E R R A B L E ;
DEFERRED		: D E F E R R E D ;
DEFINED			: D E F I N E D ;
DEFINER			: D E F I N E R ;
DELETE			: D E L E T E ;
DELIMITED		: D E L I M I T E D ;
DELTA			: D E L T A ;
DENSE_RANK		: D E N S E [_] R A N K ;
DESC			: D E S C ;
DESCRIBE		: D E S C R I B E ;
DETERMINISTIC		: D E T E R M I N I S T I C ;
DISTINCT		: D I S T I N C T ;
DISTRIBUTE		: D I S T R I B U T E ;
DOUBLE			: D O U B L E ;
DROP			: D R O P ;
DRY			: D R Y ;
ELSE			: E L S E ;
END			: E N D ;
ENFORCED		: E N F O R C E D ;
ESCAPED			: E S C A P E D ;
EXCEPT			: E X C E P T ;
EXCLUDE			: E X C L U D E ;
EXECUTE			: E X E C U T E ;
EXISTS			: E X I S T S ;
EXPECT			: E X P E C T ;
EXTENDED		: E X T E N D E D ;
EXTERNAL		: E X T E R N A L ;
EXTRACT			: E X T R A C T ;
FAIL			: F A I L ;
FALSE			: F A L S E ;
FIELDS			: F I E L D S ;
FILE			: F I L E ;
FILES			: F I L E S ;
FILTER			: F I L T E R ;
FIRST			: F I R S T ;
FLOAT			: F L O A T ;
FOLLOWING		: F O L L O W I N G ;
FOR			: F O R ;
FOREIGN			: F O R E I G N ;
FORMAT			: F O R M A T ;
FORMATTED		: F O R M A T T E D ;
FROM			: F R O M ;
FULL			: F U L L ;
FUNCTION		: F U N C T I O N ;
FUNCTIONS		: F U N C T I O N S ;
GENERATED		: G E N E R A T E D ;
GRANT			: G R A N T ;
GROUP			: G R O U P ;
GROUPING		: G R O U P I N G ;
HAVING			: H A V I N G ;
HISTORY			: H I S T O R Y ;
HOUR			: H O U R ;
HOURS			: H O U R S ;
IDENTITY		: I D E N T I T Y ;
INDEX			: I N D E X ;
IF			: I F ;
IGNORE			: I G N O R E ;
IN			: I N ;
INCLUDE			: I N C L U D E ;
INCREMENT		: I N C R E M E N T ;
INITIALLY		: I N I T I A L L Y ;
INNER			: I N N E R ;
INSERT			: I N S E R T ;
INT			: I N T ;
INTEGER			: I N T E G E R ;
INTERSECT		: I N T E R S E C T ;
INTERVAL		: I N T E R V A L ;
INTO			: I N T O ;
IS			: I S ;
ITEMS			: I T E M S ;
JAR			: J A R ;
JDBC			: J D B C ;
JOIN			: J O I N ;
JSON			: J S O N ;
KEY			: K E Y ;
KEYS			: K E Y S ;
LAG			: L A G ;
LANGUAGE		: L A N G U A G E ;
LAST			: L A S T ;
LATERAL			: L A T E R A L ;
LEAD			: L E A D ;
LEADING			: L E A D I N G ;
LEFT			: L E F T ;
LETTER_D		: D ;
LETTER_E		: E ;
LETTER_V		: V ;
LIBSVM			: L I B S V M ;
LIKE			: L I K E ;
LIMIT			: L I M I T ;
LINES			: L I N E S ;
LIVE			: L I V E ;
LOCATION		: L O C A T I O N ;
LONG			: L O N G ;
MANAGED			: M A N A G E D ;
MAP			: M A P ;
MATCH			: M A T C H ;
MATCHED			: M A T C H E D ;
MERGE			: M E R G E ;
METASTORE		: M E T A S T O R E ;
MINUS			: M I N U S ;
MINUTE			: M I N U T E ;
MODIFY			: M O D I F Y ;
MONTH			: M O N T H ;
NATURAL			: N A T U R A L ;
NO			: N O ;
NONE			: N O N E ;
NORELY			: N O R E L Y ;
NOSCAN			: N O S C A N ;
NOT			: N O T ;
NTH_VALUE		: N T H [_] V A L U E ;
NTILE			: N T I L E ;
NULL			: N U L L ;
NULLS			: N U L L S ;
NUMERIC			: N U M E R I C ;
OF			: O F ;
OFFSET			: O F F S E T ;
ON			: O N ;
OPTIMIZE		: O P T I M I Z E ;
OPTIONS			: O P T I O N S ;
OR			: O R ;
ORC			: O R C ;
ORDER			: O R D E R ;
OUT			: O U T ;
OUTER			: O U T E R ;
OVER			: O V E R ;
OVERWRITE		: O V E R W R I T E ;
OWNER			: O W N E R ;
PARTITION		: P A R T I T I O N ;
PARTITIONS		: P A R T I T I O N S ;
PARTITIONED		: P A R T I T I O N E D ;
PARQUET			: P A R Q U E T ;
PERCENT			: P E R C E N T ;
PERCENT_RANK		: P E R C E N T [_] R A N K ;
PIVOT			: P I V O T ;
PRECEDING		: P R E C E D I N G ;
PRIMARY			: P R I M A R Y ;
PRIVILEGES		: P R I V I L E G E S ;
PROVIDER		: P R O V I D E R ;
PURGE			: P U R G E ;
QUALIFY			: Q U A L I F Y ;
QUERY			: Q U E R Y ;
RANGE			: R A N G E ;
RANK			: R A N K ;
RCFILE			: R C F I L E ;
READ			: R E A D ;
READS			: R E A D S ;
RECIPIENT		: R E C I P I E N T ;
RECOVER			: R E C O V E R ;
REFERENCES		: R E F E R E N C E S ;
REFRESH			: R E F R E S H ;
RENAME			: R E N A M E ;
REPEATABLE		: R E P E A T A B L E ;
REPLACE			: R E P L A C E ;
RESPECT			: R E S P E C T ;
RESTORE			: R E S T O R E ;
RESTRICT		: R E S T R I C T ;
RETAIN			: R E T A I N ;
RETURN			: R E T U R N ;
RETURNS			: R E T U R N S ;
REVOKE			: R E V O K E ;
RIGHT			: R I G H T ;
ROLLUP			: R O L L U P ;
ROW			: R O W ;
ROWS			: R O W S ;
ROW_NUMBER		: R O W [_] N U M B E R ;
RUN			: R U N ;
SCD			: S C D ;
SCHEMA			: S C H E M A ;
SCHEMAS			: S C H E M A S ;
SECOND			: S E C O N D ;
SECURITY		: S E C U R I T Y ;
SELECT			: S E L E C T ;
SEMI			: S E M I ;
SEQUENCE		: S E Q U E N C E ;
SEQUENCEFILE		: S E Q U E N C E F I L E ;
SERDE			: S E R D E ;
SERDEPROPERTIES		: S E R D E P R O P E R T I E S ;
SET			: S E T ;
SETS			: S E T S ;
SHARE			: S H A R E ;
SHARES			: S H A R E S ;
SHOW			: S H O W ;
SMALLINT		: S M A L L I N T ;
SORT			: S O R T ;
SOURCE			: S O U R C E ;
SQL			: S Q L ;
START			: S T A R T ;
STATISTICS		: S T A T I S T I C S ;
STORED			: S T O R E D ;
STORAGE			: S T O R A G E ;
STREAM			: S T R E A M ;
STREAMING		: S T R E A M I N G ;
STRING			: S T R I N G ;
STRUCT			: S T R U C T ;
SYNC			: S Y N C ;
SYSTEM			: S Y S T E M ;
TABLE			: T A B L E ;
TABLES			: T A B L E S;
TABLESAMPLE		: T A B L E S A M P L E ;
TARGET			: T A R G E T ;
TBLPROPERTIES		: T B L P R O P E R T I E S ;
TEMP			: T E M P ;
TEMPORARY		: T E M P O R A R Y ;
TERMINATED		: T E R M I N A T E D ;
TEXT			: T E X T ;
TEXTFILE		: T E X T F I L E ;
THEN			: T H E N ;
TIMESERIES		: T I M E S E R I E S ;
TIMESTAMP		: T I M E S T A M P ;
TINYINT			: T I N Y I N T ;
TO			: T O ;
TODO			: T O D O ;
TRACK			: T R A C K ;
TRAILING		: T R A I L I N G ;
TRIM			: T R I M ;
TRUNCATE		: T R U N C A T E ;
TRUE			: T R U E ;
TYPE			: T Y P E ;
UNBOUNDED		: U N B O U N D E D ;
UNION			: U N I O N ;
UNIQUE			: U N I Q U E ;
UNPIVOT			: U N P I V O T ;
UNSET			: U N S E T ;
UPDATE			: U P D A T E ;
UPDATES			: U P D A T E S ;
USE			: U S E ;
USER			: U S E R ;
USERS			: U S E R S ;
USING			: U S I N G ;
VACUUM			: V A C U U M ;
VALUES			: V A L U E S ;
VARCHAR			: V A R C H A R ;
VERSION			: V E R S I O N ;
VIEW			: V I E W ;
VIOLATION		: V I O L A T I O N ;
VOID			: V O I D ;
VOLUME			: V O L U M E ;
WHEN			: W H E N ;
WHERE			: W H E R E ;
WINDOW			: W I N D O W ;
WITH			: W I T H ;
WRITE			: W R I T E ;
YEAR			: Y E A R ;
ZORDER			: Z O R D E R ;


//==============================================================================

fragment A		: [aA];
fragment B		: [bB];
fragment C		: [cC];
fragment D		: [dD];
fragment E		: [eE];
fragment F		: [fF];
fragment G		: [gG];
fragment H		: [hH];
fragment I		: [iI];
fragment J		: [jJ];
fragment K		: [kK];
fragment L		: [lL];
fragment M		: [mM];
fragment N		: [nN];
fragment O		: [oO];
fragment P		: [pP];
fragment Q		: [qQ];
fragment R		: [rR];
fragment S		: [sS];
fragment T		: [tT];
fragment U		: [uU];
fragment V		: [vV];
fragment W		: [wW];
fragment X		: [xX];
fragment Y		: [yY];
fragment Z		: [zZ];

// BIND_VARIABLE         	: COLON LETTER (LETTER | DIGIT | '_')* ;

REGULAR_ID      	: (LETTER | UNDERSCORE) (LETTER | UNDERSCORE | DIGIT | DOLLAR_SIGN)* ;

SINGLE_QUOTED_STRING 	: '\'' ( ~'\'' | '\'\'' )* '\'' ;

// DOUBLE_QUOTED_STRING : '"' (~('"') | '"' '"')+ '"' ;

// Try the TD16 version
DOUBLE_QUOTED_STRING 	: '"' ( ~'"' | '""' )* '"' ;

UNSIGNED_INTEGER	: (DIGIT)+ ;

DECIMAL_VALUE   	: DIGIT+ '.' DIGIT* LETTER_D?
                	| '.' DIGIT+
                	| DIGIT+ ('.' DIGIT*)? EXPONENT
                	| '.' DIGIT+ EXPONENT
                	;

SIMPLE_COMMENT  	: '--' ~[\r\n]* '\r'? '\n'? 	-> channel(HIDDEN) ;
BLOCK_COMMENT   	: '/*' .*? '*/' 		-> channel(HIDDEN) ;

WS                      : [ \t]+        		-> channel(HIDDEN) ;
NEWLINE                 : [\r\n]+       		-> channel(HIDDEN) ;

